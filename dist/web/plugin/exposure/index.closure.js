!function(){"use strict";function e(e,t,r){if(t&&(e.plugin_name=t),r&&e.init){var n=e.init;e.init=function(t,i){function a(){n.call(e,t,i)}return t.readyState&&t.readyState.state>=3||!t.on?a():void t.on(r,a)}}return e}function t(t,r,n){return e(t,r,n),t.plugin_version=s,t}function r(){return("MutationObserver"in window||"WebKitMutationObserver"in window||"MozMutationObserver"in window)&&"IntersectionObserver"in window}function n(e){var t={};return a.each(e,function(r,n){switch(n){case"area_rate":r=Number(r),!isNaN(r)&&r>=0&&r<=1?t.area_rate=r:o("parameter config.area_rate error. config:",e);break;case"stay_duration":r=Number(r),!isNaN(r)&&r>=0?t.stay_duration=r:o("parameter config.stay_duration error. config:",e);break;case"repeated":"false"===r||r===!1||"true"===r||r===!0?t.repeated=r:o("parameter config.repeated error. config:",e)}}),t}var i,a,o,s="1.24.14",c="data-sensors-exposure-event-name",u={},d=[],l={area_rate:0,stay_duration:0,repeated:!0},v={isReady:!1,init:function(e){if(!r())return void o("The current browser does not support the element exposure key API, and the element exposure plugin initialization failed.");var t=this;a.isObject(e)&&(l=a.extend(l,n(e))),a.bindReady(function(){var e=t.getElesByEventName();t.addObserveByNodes(e),f.init()}),i.ee.spa.on("switch",function(e){if(e===location.href)return!1;t.clear();var r=t.getElesByEventName();t.addObserveByNodes(r)}),a.listenPageState({visible:function(){t.start()},hidden:function(){t.stop()}}),this.isReady=!0},getElesByEventName:function(e){return e=e||document,e.querySelectorAll("["+c+"]")},getEleEventName:function(e){return e.getAttribute(c)},getEleAttr:function(e,t){t=t||e.attributes;var r={},i={},o=this.getEleEventName(e);return a.each(t,function(e){var t=e.value;try{var n=e.name.match(/^data-sensors-exposure-property-(.+)/);n&&(r[n[1]]=t)}catch(a){}try{var o=e.name.match(/^data-sensors-exposure-config-(.+)/);if(o)switch(o[1]){case"area_rate":i.area_rate=t;break;case"stay_duration":i.stay_duration=t;break;case"repeated":i.repeated=!1}}catch(a){}}),{eventName:o,config:n(i),properties:r}},addObserveByNodes:function(e){if(e.length){var t=this;a.each(e,function(e){if(1===e.nodeType&&e.hasAttribute(c)){var r=t.getEleAttr(e);r.config=a.extend({},l,r.config),r.ele=e,t.addOrUpdateWatchEle(r)}})}},getIntersection:function(e){var t=null,r=this;return t=u[e.area_rate]?u[e.area_rate]:u[e.area_rate]=new IntersectionObserver(function(){r.exposure.apply(r,arguments)},{threshold:e.area_rate})},exposure:function(e){var t=this;a.each(e,function(e){var r=e.target,n=t.getEleOption(r);return e.isIntersecting===!1||!n||n.config.isSend?void(n&&n.timer&&(clearTimeout(n.timer),n.timer=null)):void(e.intersectionRatio>=n.config.area_rate&&(n.timer&&(clearTimeout(n.timer),n.timer=null),n.timer=setTimeout(function(){var e=r.getBoundingClientRect(),n=t.getEleOption(r);if(e.width&&e.height&&n&&n.eventName&&!n.config.isSend){var o=i.heatmap.getEleDetail(r);i.track(n.eventName,a.extend({},o,n.properties)),n.config.isSend=!0,n.config.repeated&&(n.config.isSend=!1)}},1e3*n.config.stay_duration)))})},getEleOption:function(e){var t=null;return a.each(d,function(r){e===r.ele&&(t=r)}),t},addOrUpdateWatchEle:function(e){var t=e.ele,r=e.config,n=v.getEleOption(t);if(n)a.extend2Lev(n,e),n.config.repeated&&(n.config.isSend=!1);else{if(!e.eventName)return o("parameter option.eventName error. option:",e),!1;a.isElement(t)||o("parameter element error. option:",e);var i=this.getIntersection(r);i.observe(t),d.push(e)}},removeWatchEle:function(e){var t=null,r=-1;if(a.each(d,function(n,i){e===n.ele&&(t=n,r=i)}),t){var n=t.config,i=u[n.area_rate];i&&a.isElement(e)&&(i.unobserve(e),t.timer&&(clearTimeout(t.timer),t.timer=null),r>-1&&d.splice(r,1))}},start:function(){a.each(d,function(e){var t=e.config,r=e.ele,n=u[t.area_rate];n&&a.isElement(r)&&n.observe(r)})},stop:function(){a.each(d,function(e){var t=e.config,r=e.ele,n=u[t.area_rate];n&&a.isElement(r)&&(n.unobserve(r),e.timer&&(clearTimeout(e.timer),e.timer=null))})},clear:function(){this.stop(),u={},d=[]}},f={mo:null,init:function(){var e=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;this.mo=new e(this.listenNodesChange),this.observe()},observe:function(){this.mo.observe(document.body,{attributes:!0,childList:!0,subtree:!0,attributeOldValue:!0})},listenNodesChange:function(e){a.each(e,function(e){switch(e.type){case"childList":e.removedNodes.length>0?a.each(e.removedNodes,function(e){if(1===e.nodeType){v.removeWatchEle(e);var t=v.getElesByEventName(e);t.length&&a.each(t,function(e){v.removeWatchEle(e)})}}):e.addedNodes.length&&(v.addObserveByNodes(e.addedNodes),a.each(e.addedNodes,function(e){if(1===e.nodeType){var t=v.getElesByEventName(e);v.addObserveByNodes(t)}}));break;case"attributes":if(!e.attributeName)return!1;var t=e.target,r=e.attributeName;if(!a.isString(r)||r.indexOf("data-sensors-exposure")<0)return;var n=v.getEleAttr(t,[{name:r}]),i=v.getEleOption(t)||{ele:t,config:l},o=a.extend2Lev({},i,n);Object.prototype.hasOwnProperty.call(o,"eventName")?v.addOrUpdateWatchEle(o):v.removeWatchEle(t)}})}},m={exposureViews:d,init:function(e,t){return!(!e||i)&&(i=e,a=i._,o=i.log,v.init(t),void o("Exposure Plugin initialized successfully"))},addExposureView:function(e,t){if(!v.isReady)return void o("Exposure Plugin uninitialized.");if(!a.isElement(e))return void o("parameter element error.");var r={ele:e,config:a.isObject(t.config)?n(t.config):{},eventName:t.eventName,properties:a.isObject(t.properties)?t.properties:{}},i=v.getEleOption(e);if(i){if(i=a.extend2Lev({},i,r),!a.isString(i.eventName)||!i.eventName)return void o("parameter option.eventName error. option",t);i.config.repeated&&(i.config.isSend=!1)}else{if(!a.isString(r.eventName)||!r.eventName)return void o("parameter option.eventName error. option",t);v.addOrUpdateWatchEle(r)}},removeExposureView:function(e){return v.isReady?a.isElement(e)?void v.removeWatchEle(e):void o("removeExposureView parameter ele errors."):void o("Exposure Plugin uninitialized.")}},p=t(m,"Exposure","sdkAfterInitPara");return p}();